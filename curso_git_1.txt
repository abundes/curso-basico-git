EJERCICIOS


Traducción y adaptación: Luis Gonzalez <hadesbox@gmail.com>
basado en http://rypress.com/
 
 ----------------------------------------------------------------------

COMANDOS BASICOS - REPOSITORIO LOCAL

1. Crear una carpeta en algun lugar del sistema, por ejemplo 
$ mkdir ~/gitdemo

2. Cambiarte dentro del proyecto
$ cd ~/gitdemo

3. Inicializa la carpeta actual como un repositorio Git
$ git init

4. Dentro de la carpeta crea un archivo con el siguiente contenido llamado index.html

<!DOCTYPE html>
<html lang="es">
<head>
  <title>Mi pagina con colores</title>
  <meta charset="utf-8" />
</head>
<body>
  <h1 style="color: #07F">A Colorful Website</h1>
  <p>Hola soy MANOLO EL DEL BOMBO!</p>    
  
  <h2 style="color: #C00">News</h2>
  <ul>
    <li>uf!</li>
  </ul>
</body>
</html>


5. si miras el estado actual de la carpeta, te aparecerá el index.html como "untracked" (fuera del control de versiones de git)
$ git status

6. añade el archivo al "staging"... el staging es la zona de los archivos que van a hacerse commit, mirar como cambia de estado...
$ git add index.html
$ git status

7a. hacer commit del archivo, se nos abrirá automaticamente el editor por defecto (VIM o NANO), esto es para escribir el mensaje del commit, para windows o mac será distinto.
$ git commit

nota: para realizar commit con el vim/nano primero tenemos que escribir un mensaje, luego grabar el archivo y salir (en vim ":wq", en nano ctrl+o y luego ctrl+x)

7b. tambien se puede hacer commit sin editores secundarios, especificando el comentario en la linea de comandos
$ git commit -m "Commit inicial"

8. mira el historial de repositorio
$ git log

9. ahora agregaremos dos nuevos archivos....

azul.html

<!DOCTYPE html>
<html lang="es">
<head>
  <title>La página azul</title>
  <meta charset="utf-8" />
</head>
<body>
  <h1 style="color: #00F">La página azul</h1>
  <p>El azul es el color de cielo.</p>
</body>
</html>

y naranja.html

<!DOCTYPE html>
<html lang="es">
<head>
  <title>La página naranja</title>
  <meta charset="utf-8" />
</head>
<body>
  <h1 style="color: #F90">La pagina naranja</h1>
  <p>El naranja mola tanto que lleva el nombre de la
  <span style="color: #F90">fruta</span>.</p>
</body>
</html>


10. para casi todos los comandos de git, se pueden nombrar la lista de archivos como parámetros, añadelos.
$ git add naranja.html azul.html
$ git status


11. haz commit de estos dos nuevos archivos
$ git commit


12. ahora modificaremos el index.html para agregar enlaces a nuestras paginas agregando lo siguiente al final del BODY

<h2>Navegacion</h2>
<ul>
  <li style="color: #F90">
    <a href="naranja.html">Pagina naranja</a>
  </li>
  <li style="color: #00F">
    <a href="azul.html">Pagina azul</a>
  </li>
</ul>


13. ahora agregaremos un enlace para regresar al index.html en azul.html y naranja.html, al final del BODY

<p><a href="index.html">Regresar al índice</a></p>


14. ahora haremos commit de todos nuestros cambios, de los 3 archivos con un único comando/accion, en git cuando un archivo se encuentra bajo control de versiones y luego es modificado, hay que agregarlo al al "stagging" (zona pendiente de hacerse commit)

$ git status
$ git add index.html naranja.html azuls.html
$ git status
$ git commit -m "Agregando enlaces de navegacion"


15. mira el historial de todo el repositorio
$ git log --oneline


16. mira el historial de un archivo individual, por ejemplo azul.html

$ git log --oneline azul.html

