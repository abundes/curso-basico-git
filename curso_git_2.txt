Traducción y adaptación: Luis Gonzalez <hadesbox@gmail.com>
basado en http://rypress.com/
 
 ----------------------------------------------------------------------


1. utiliza el comando log para ver el historial completo, cada commit aparece en una línea
$ git log --oneline

nota: fijaros como son dos columnas, la primera es un hash SHA1 (o mas bien el principio de un hash SHA1) y la segunda columna es el COMENTARIO de ese commit.


2. vamos a movernos a un commit pasado que elijas... los commits se identifican por hash sha1, si haces checkout del primer commit te daras cuenta como azul.html y naranja.html NO estan en el directorio (con un simple "ls").
$ git checkout <hashSHA1>

3. si haces un status saldrá lo siguiente, esto es por qué la rama actual no tiene ningún estado asociado...
# Not currently on any branch.
nothing to commit (working directory clean)

Si quisieras trabajar sobre un snapshot pasado (como en este caso) y comenzar a editar un archivo, no es recomendable que comiences a editar cuando te salga el mensaje para evitarte problemas... en su lugar se debería de crear una rama nueva con el comando git checkout -b <nombrenuevarama> <SHA1> pero de momento no lo hagas, mas adelante haremos ejemplos con RAMAS!

4. para volver al último commit de nuestra rama master
$ git checkout master

5.ahora crearemos un TAG... recuerda los 3 tipos de tag que existen. 
$ git tag -a v1.0 -m "Version estable"

5. ahora intentaremos crear una página experimental sin romper nada de lo que se ha hecho commit, agrega el archivo experimento.html

<!DOCTYPE html>
<html lang="es">
<head>
  <title>Loco loco experimento</title>
  <meta charset="utf-8" />
</head>
<body>
  <h1>Loco loco experimento</h1>
  <p>Estamos intentando hacer un <span style="color: #06C">experimento</span> <span style="color: #F0F">loco</span>!
  <p><a href="index.html">Regresar a la página</a></p>
</body>
</html>


El objetivo de esto, es simular cuando se hacen cambios que no estamos seguros si seran finales...

7. agrega el archivo y hazle commit
$ git add experimento.html
$ git status
$ git commit -m "Experimento loco..."
$ git log


8. para regresar a la versión estable, hazle un simple checkout al tag que creaste
$ git checkout v1.0


9. despues de analizar los archivos con tu editor de texto (experimento.html ya no existe...) regresaremos al último commit... cómo?
$ git checkout master
$ git log --oneline


10. despues de pensartelo un par de veces... estas convencido de que el experimento.html no ha salido nada bien.. y quieres "deshacer" el ultimo commit... para esto busca su SHA1 y luego hazle un revert! Recuerda el revert hace un contra-commit, mientras que el RESET elimina commits de la rama y regresas a como estabas antes. 
$ git revert <sha1>